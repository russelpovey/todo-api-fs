[{"C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\App.js":"1","C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\DataStore.jsx":"2","C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\SharedUI\\index.jsx":"3","C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\Main\\index.jsx":"4","C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\LoginRegister\\index.jsx":"5","C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\index.js":"6"},{"size":250,"mtime":1611604953684,"results":"7","hashOfConfig":"8"},{"size":1647,"mtime":1611604852818,"results":"9","hashOfConfig":"8"},{"size":1393,"mtime":1611603914274,"results":"10","hashOfConfig":"8"},{"size":2924,"mtime":1611605284574,"results":"11","hashOfConfig":"8"},{"size":4944,"mtime":1611602343267,"results":"12","hashOfConfig":"8"},{"size":572,"mtime":1611600436285,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9wv0kl",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\App.js",[],"C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\DataStore.jsx",["27","28"],"import axios from \"axios\";\r\nimport React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst DataContext = createContext();\r\n\r\nfunction DataStore({ children }) {\r\n  const [state, setState] = useState({\r\n    user: null,\r\n    token: null,\r\n    todos: [\r\n      {\r\n        type: \"string\",\r\n        title: \"string\",\r\n        status: 0,\r\n        detail: \"string\",\r\n        instance: \"string\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  console.log(state);\r\n  function logOut() {\r\n    setState((p) => ({ ...p, user: null, token: null }));\r\n  }\r\n\r\n  function getToDos() {\r\n    return axios\r\n      .get(\"http://localhost:5000/api/todos\", {\r\n        headers: { Authorization: `Bearer ${state.token}` },\r\n      })\r\n      .then((res) => {\r\n        setState((p) => ({ ...p, todos: res.data }));\r\n        console.log({ res });\r\n      });\r\n  }\r\n\r\n  function getConfig() {\r\n    return { headers: { Authorization: `Bearer ${state.token}` } };\r\n  }\r\n\r\n  function addToDo({ title, description, isComplete = false }) {\r\n    return axios.post(\r\n      \"http://localhost:5000/api/todos\",\r\n      {\r\n        title,\r\n        description,\r\n        isComplete,\r\n      },\r\n      getConfig()\r\n    );\r\n  }\r\n\r\n  function removeToDo() {}\r\n\r\n  function editToDo(todo) {\r\n    return axios.put(\r\n      \"http://localhost:5000/api/todos/\" + todo.id,\r\n      todo,\r\n      getConfig()\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={{ state, setState, getToDos, addToDo, editToDo }}\r\n    >\r\n      {children}\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useDataStore() {\r\n  return useContext(DataContext);\r\n}\r\n\r\nexport default DataStore;\r\nexport { useDataStore };\r\n","C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\SharedUI\\index.jsx",[],"C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\Main\\index.jsx",["29"],"C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\LoginRegister\\index.jsx",["30","31"],"C:\\Users\\Russel\\Documents\\todo-api-fs\\Todo.UI\\src\\index.js",[],{"ruleId":"32","severity":1,"message":"33","line":22,"column":12,"nodeType":"34","messageId":"35","endLine":22,"endColumn":18},{"ruleId":"32","severity":1,"message":"36","line":53,"column":12,"nodeType":"34","messageId":"35","endLine":53,"endColumn":22},{"ruleId":null,"fatal":true,"severity":2,"message":"37","line":19,"column":25},{"ruleId":"32","severity":1,"message":"38","line":9,"column":10,"nodeType":"34","messageId":"35","endLine":9,"endColumn":17},{"ruleId":"32","severity":1,"message":"39","line":9,"column":19,"nodeType":"34","messageId":"35","endLine":9,"endColumn":28},"no-unused-vars","'logOut' is defined but never used.","Identifier","unusedVar","'removeToDo' is defined but never used.","Parsing error: JSX attributes must only be assigned a non-empty expression\n\n  17 |       </Header>\n  18 |       <Body>\n> 19 |         <Button onClick={}>Add ToDo!</Button>\n     |                         ^\n  20 |         {state.todos.map((c) => (\n  21 |           <Card key={c.id} {...c} />\n  22 |         ))}","'message' is assigned a value but never used.","'seMessage' is assigned a value but never used."]